{
  "properties": [
    {
      "name": "hapnium.resourcemanagement.cache.enabled",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Enable or disable caching functionality."
    },
    {
      "name": "hapnium.resourcemanagement.cache.provider",
      "type": "java.lang.String",
      "defaultValue": "caffeine",
      "description": "Cache provider to use (caffeine, redis, memory)."
    },
    {
      "name": "hapnium.resourcemanagement.cache.default-ttl",
      "type": "java.time.Duration",
      "defaultValue": "PT5M",
      "description": "Default time-to-live for cache entries."
    },
    {
      "name": "hapnium.resourcemanagement.cache.key-prefix",
      "type": "java.lang.String",
      "defaultValue": "cache:",
      "description": "Prefix for all cache keys."
    },
    {
      "name": "hapnium.resourcemanagement.cache.enable-metrics",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Enable collection of cache metrics."
    },
    {
      "name": "hapnium.resourcemanagement.cache.enable-statistics",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Enable internal cache statistics (hit/miss ratio, etc.)."
    },
    {
      "name": "hapnium.resourcemanagement.cache.redis.key-prefix",
      "type": "java.lang.String",
      "defaultValue": "",
      "description": "Prefix used for all Redis cache keys."
    },
    {
      "name": "hapnium.resourcemanagement.cache.redis.key-expiration",
      "type": "java.time.Duration",
      "defaultValue": "PT1H",
      "description": "Default expiration time for Redis cache keys."
    },
    {
      "name": "hapnium.resourcemanagement.cache.redis.max-retries",
      "type": "java.lang.Integer",
      "defaultValue": 3,
      "description": "Maximum retry attempts for Redis cache operations."
    },
    {
      "name": "hapnium.resourcemanagement.cache.redis.retry-delay",
      "type": "java.time.Duration",
      "defaultValue": "PT0.1S",
      "description": "Delay between Redis cache retry attempts."
    },
    {
      "name": "hapnium.resourcemanagement.cache.redis.enable-compression",
      "type": "java.lang.Boolean",
      "defaultValue": false,
      "description": "Enable compression of Redis cache values."
    },
    {
      "name": "hapnium.resourcemanagement.cache.redis.compression-threshold",
      "type": "java.lang.Integer",
      "defaultValue": 1024,
      "description": "Minimum value size in bytes before compression is applied."
    },
    {
      "name": "hapnium.resourcemanagement.cache.caffeine.maximum-size",
      "type": "java.lang.Integer",
      "defaultValue": 10000,
      "description": "Maximum number of entries in the Caffeine cache."
    },
    {
      "name": "hapnium.resourcemanagement.cache.caffeine.expire-after-write",
      "type": "java.time.Duration",
      "defaultValue": "PT10M",
      "description": "Duration after which a Caffeine cache entry expires after being written."
    },
    {
      "name": "hapnium.resourcemanagement.cache.caffeine.expire-after-access",
      "type": "java.time.Duration",
      "defaultValue": "PT5M",
      "description": "Duration after which a Caffeine cache entry expires after last access."
    },
    {
      "name": "hapnium.resourcemanagement.cache.caffeine.enable-statistics",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Enable Caffeine cache statistics."
    },
    {
      "name": "hapnium.resourcemanagement.cache.caffeine.record-stats",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Record Caffeine cache stats for analysis."
    },
    {
      "name": "hapnium.resourcemanagement.rate-limit.enabled",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Enable or disable rate limiting functionality."
    },
    {
      "name": "hapnium.resourcemanagement.rate-limit.provider",
      "type": "java.lang.String",
      "defaultValue": "memory",
      "description": "Rate limit provider to use (memory, redis)."
    },
    {
      "name": "hapnium.resourcemanagement.rate-limit.default-strategy",
      "type": "java.lang.String",
      "defaultValue": "sliding-window",
      "description": "Default rate limiting strategy (sliding-window, token-bucket, fixed-window)."
    },
    {
      "name": "hapnium.resourcemanagement.rate-limit.default-limit",
      "type": "java.lang.Integer",
      "defaultValue": 100,
      "description": "Default rate limit per window."
    },
    {
      "name": "hapnium.resourcemanagement.rate-limit.default-window",
      "type": "java.time.Duration",
      "defaultValue": "PT1M",
      "description": "Default time window for rate limiting."
    },
    {
      "name": "hapnium.resourcemanagement.rate-limit.skip-on-failure",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Skip rate limiting if an internal error occurs."
    },
    {
      "name": "hapnium.resourcemanagement.rate-limit.key-prefix",
      "type": "java.lang.String",
      "defaultValue": "rl:",
      "description": "Prefix used for all rate limit keys."
    },
    {
      "name": "hapnium.resourcemanagement.rate-limit.redis.key-prefix",
      "type": "java.lang.String",
      "defaultValue": "",
      "description": "Prefix used for all Redis rate limiting keys."
    },
    {
      "name": "hapnium.resourcemanagement.rate-limit.redis.key-expiration",
      "type": "java.time.Duration",
      "defaultValue": "PT1H",
      "description": "Default expiration time for Redis rate limit keys."
    },
    {
      "name": "hapnium.resourcemanagement.rate-limit.redis.max-retries",
      "type": "java.lang.Integer",
      "defaultValue": 3,
      "description": "Maximum retry attempts for Redis rate limiting operations."
    },
    {
      "name": "hapnium.resourcemanagement.rate-limit.redis.retry-delay",
      "type": "java.time.Duration",
      "defaultValue": "PT0.1S",
      "description": "Delay between Redis rate limiting retry attempts."
    },
    {
      "name": "hapnium.resourcemanagement.rate-limit.redis.enable-compression",
      "type": "java.lang.Boolean",
      "defaultValue": false,
      "description": "Enable compression of Redis rate limiting values."
    },
    {
      "name": "hapnium.resourcemanagement.rate-limit.redis.compression-threshold",
      "type": "java.lang.Integer",
      "defaultValue": 1024,
      "description": "Minimum value size in bytes before compression is applied in Redis rate limiting."
    },
    {
      "name": "hapnium.resourcemanagement.rate-limit.memory.max-entries",
      "type": "java.lang.Integer",
      "defaultValue": 10000,
      "description": "Maximum number of entries in the in-memory rate limiting store."
    },
    {
      "name": "hapnium.resourcemanagement.rate-limit.memory.cleanup-interval",
      "type": "java.time.Duration",
      "defaultValue": "PT5M",
      "description": "Interval between cleanup of stale entries in in-memory rate limiting."
    },
    {
      "name": "hapnium.resourcemanagement.rate-limit.memory.enable-metrics",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Enable metrics collection for in-memory rate limiting."
    }
  ]
}